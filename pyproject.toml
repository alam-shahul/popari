[build-system]
requires = ["hatchling>=1.27.0"]
build-backend = "hatchling.build"

[project]
name = "popari"
dynamic = ["version"]

authors = [
  { name="Shahul Alam", email="alam.shahul@gmail.com" },
]
dependencies = [
    "numpy<2.0",
    "scipy>=1.10.1",
    "scanorama>=1.7.4",
    "scikit-learn>=0.24.1",
    "pandas>=1.5.2",
    "anndata>=0.11.0",
    "torch>=1.13.0",
    "tqdm>=4.60.0",
    "umap-learn>=0.5.1",
    "scanpy<=1.9.3",
    "seaborn>=0.11.1",
    "matplotlib>=3.7.0",
    "squidpy>=1.6.2",
    "gseapy>=1.1.3",
    "kneed>=0.8.5",
    "louvain>=0.8.0",
    "leidenalg>=0.9.0",
    "pymetis>=2023.1.1",
    "awkward>=2.6.8",
    "ortools<=9.4.1874",
]
description = "Popari: a probabilistic graphical model for integrated spatial transcriptomics analysis"
readme = "README.md"
license = { file="LICENSE" }
requires-python = ">=3.10"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]

[tool.hatch.metadata]
allow-direct-references = true # This allows us to specify dependencies on GitHub; maybe can remove later

[tool.hatch.version]
path = "popari/__about__.py"

[project.urls]
"Homepage" = "https://github.com/alam-shahul/popari"
"Bug Tracker" = "https://github.com/alam-shahul/popari/issues"

[project.scripts]
popari = "popari:main"
popari-mlflow = "popari.mlflow.train:main"
popari-grid-search= "popari.mlflow.grid_search:run"

[project.optional-dependencies]
simulation = [
  "jupyterlab",
  "ipycanvas",
  "jupyterlab_execute_time",
]
jupyter = [
  "jupyterlab",
  "jupyterlab_execute_time",
  "jupyter-resource-usage",
]
mlflow = [
  "mlflow>=2.5.0",
  "toml>=0.10.2"
]
benchmark = [
  "multiprocess>=0.70.15"
]
test = [
  "pytest",
  "pytest-xdist",
]

[tool]

[tool.hatch.build.targets.sdist]
include = [
  "popari/*.py",
  "popari/mlflow/*.py",
]

[tool.hatch.build.targets.wheel]
include = [
  "popari/*.py",
  "popari/mlflow/*.py",
]

[tool.flake8]
max-line-length = 120
count = true
extend-ignore = [
    "E203",  # conflicting with black style slicing
    "D107",  # only need docstring at class level, no need at __init__
]

[tool.black]
line-length = 120

[tool.isort]
profile = "black"
line_length = 120

[tool.pytest.ini_options]
testpaths = ["tests"]
